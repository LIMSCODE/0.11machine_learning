{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMFiEf4aePxdVqiLnC12jCH"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":[],"metadata":{"id":"2yhvKEbfXSl8"}},{"cell_type":"markdown","source":["# 10. 피부암 초기 진단"],"metadata":{"id":"cWWhmV9ZXy-7"}},{"cell_type":"code","source":["# 피부암 데이터셋 불러오기\n","# https://teddylee777.github.io/kaggle/Kaggle-API-%EC%82%AC%EC%9A%A9%EB%B2%95/\n","\n","!pip install kaggle\n","from google.colab import files\n","files.upload()\n","\n","#kaggle api 업로드하기\n","!mkdir -p ~/.kaggle\n","!cp kaggle.json ~/.kaggle/\n","!chmod 600 ~/.kaggle/kaggle.json\n","!kaggle datasets download -d kmader/skin-cancer-mnist-ham10000\n","!unzip /content/skin-cancer-mnist-ham10000.zip\n"],"metadata":{"id":"yczR_d_7XbD-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import io\n","import os\n","from glob import glob\n","\n","image_list = glob(os.path.join('/content/HAM10000_images_part_1/','*.jpg'))\n","image_list = image_list + glob(os.path.join('/content/HAM10000_images_part_2/','*.jpg'))\n","imageid_path_dict = {os.path.splitext(os.path.basename(x))[0]: x\n","                     for x in image_list}\n","\n","imageid_path_dict"],"metadata":{"id":"RA0_-EzBXbsp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data = pd.read_csv('/content/HAM10000_metadata.csv')\n","data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"VvMOTu3cXb_r","executionInfo":{"status":"ok","timestamp":1719068117125,"user_tz":-540,"elapsed":389,"user":{"displayName":"Lim Jey","userId":"15661344898352749079"}},"outputId":"fc573af2-4f3b-4099-9f34-e1aba81fabcd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     lesion_id      image_id   dx dx_type   age   sex localization\n","0  HAM_0000118  ISIC_0027419  bkl   histo  80.0  male        scalp\n","1  HAM_0000118  ISIC_0025030  bkl   histo  80.0  male        scalp\n","2  HAM_0002730  ISIC_0026769  bkl   histo  80.0  male        scalp\n","3  HAM_0002730  ISIC_0025661  bkl   histo  80.0  male        scalp\n","4  HAM_0001466  ISIC_0031633  bkl   histo  75.0  male          ear"],"text/html":["\n","  <div id=\"df-4fabc682-c9c5-46d8-b127-3e8e044aa1fc\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>lesion_id</th>\n","      <th>image_id</th>\n","      <th>dx</th>\n","      <th>dx_type</th>\n","      <th>age</th>\n","      <th>sex</th>\n","      <th>localization</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>HAM_0000118</td>\n","      <td>ISIC_0027419</td>\n","      <td>bkl</td>\n","      <td>histo</td>\n","      <td>80.0</td>\n","      <td>male</td>\n","      <td>scalp</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>HAM_0000118</td>\n","      <td>ISIC_0025030</td>\n","      <td>bkl</td>\n","      <td>histo</td>\n","      <td>80.0</td>\n","      <td>male</td>\n","      <td>scalp</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>HAM_0002730</td>\n","      <td>ISIC_0026769</td>\n","      <td>bkl</td>\n","      <td>histo</td>\n","      <td>80.0</td>\n","      <td>male</td>\n","      <td>scalp</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>HAM_0002730</td>\n","      <td>ISIC_0025661</td>\n","      <td>bkl</td>\n","      <td>histo</td>\n","      <td>80.0</td>\n","      <td>male</td>\n","      <td>scalp</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>HAM_0001466</td>\n","      <td>ISIC_0031633</td>\n","      <td>bkl</td>\n","      <td>histo</td>\n","      <td>75.0</td>\n","      <td>male</td>\n","      <td>ear</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4fabc682-c9c5-46d8-b127-3e8e044aa1fc')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4fabc682-c9c5-46d8-b127-3e8e044aa1fc button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4fabc682-c9c5-46d8-b127-3e8e044aa1fc');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b5525a1b-bbc1-454e-8be6-0096ac44f335\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b5525a1b-bbc1-454e-8be6-0096ac44f335')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b5525a1b-bbc1-454e-8be6-0096ac44f335 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data","summary":"{\n  \"name\": \"data\",\n  \"rows\": 10015,\n  \"fields\": [\n    {\n      \"column\": \"lesion_id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 7470,\n        \"samples\": [\n          \"HAM_0002743\",\n          \"HAM_0004142\",\n          \"HAM_0003658\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"image_id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10015,\n        \"samples\": [\n          \"ISIC_0033272\",\n          \"ISIC_0031923\",\n          \"ISIC_0026652\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"dx\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"bkl\",\n          \"nv\",\n          \"bcc\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"dx_type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"consensus\",\n          \"follow_up\",\n          \"histo\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 16.968613692495364,\n        \"min\": 0.0,\n        \"max\": 85.0,\n        \"num_unique_values\": 18,\n        \"samples\": [\n          80.0,\n          75.0,\n          50.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"male\",\n          \"female\",\n          \"unknown\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"localization\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 15,\n        \"samples\": [\n          \"lower extremity\",\n          \"neck\",\n          \"scalp\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["data.describe(exclude=[np.number])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"9IbtDatGXcIx","executionInfo":{"status":"ok","timestamp":1719068120206,"user_tz":-540,"elapsed":417,"user":{"displayName":"Lim Jey","userId":"15661344898352749079"}},"outputId":"482f8e30-e7e1-447a-d840-d275ebbcfe3d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          lesion_id      image_id     dx dx_type    sex localization\n","count         10015         10015  10015   10015  10015        10015\n","unique         7470         10015      7       4      3           15\n","top     HAM_0003789  ISIC_0027419     nv   histo   male         back\n","freq              6             1   6705    5340   5406         2192"],"text/html":["\n","  <div id=\"df-c946109d-b311-4056-ac1e-e80f90d14f1c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>lesion_id</th>\n","      <th>image_id</th>\n","      <th>dx</th>\n","      <th>dx_type</th>\n","      <th>sex</th>\n","      <th>localization</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>10015</td>\n","      <td>10015</td>\n","      <td>10015</td>\n","      <td>10015</td>\n","      <td>10015</td>\n","      <td>10015</td>\n","    </tr>\n","    <tr>\n","      <th>unique</th>\n","      <td>7470</td>\n","      <td>10015</td>\n","      <td>7</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>15</td>\n","    </tr>\n","    <tr>\n","      <th>top</th>\n","      <td>HAM_0003789</td>\n","      <td>ISIC_0027419</td>\n","      <td>nv</td>\n","      <td>histo</td>\n","      <td>male</td>\n","      <td>back</td>\n","    </tr>\n","    <tr>\n","      <th>freq</th>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>6705</td>\n","      <td>5340</td>\n","      <td>5406</td>\n","      <td>2192</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c946109d-b311-4056-ac1e-e80f90d14f1c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c946109d-b311-4056-ac1e-e80f90d14f1c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c946109d-b311-4056-ac1e-e80f90d14f1c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3758c65d-013d-49a1-a8b9-0965758c31dc\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3758c65d-013d-49a1-a8b9-0965758c31dc')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3758c65d-013d-49a1-a8b9-0965758c31dc button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"data\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"lesion_id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          7470,\n          \"6\",\n          \"10015\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"image_id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"10015\",\n          \"ISIC_0027419\",\n          \"1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"dx\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          7,\n          \"6705\",\n          \"10015\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"dx_type\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          4,\n          \"5340\",\n          \"10015\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sex\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3,\n          \"5406\",\n          \"10015\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"localization\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          15,\n          \"2192\",\n          \"10015\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["data.isna().any()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hwTE3P6qXcQj","executionInfo":{"status":"ok","timestamp":1719068143858,"user_tz":-540,"elapsed":455,"user":{"displayName":"Lim Jey","userId":"15661344898352749079"}},"outputId":"d794507a-a233-4a5b-b1af-e49e0c87e9c6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["lesion_id       False\n","image_id        False\n","dx              False\n","dx_type         False\n","age              True\n","sex             False\n","localization    False\n","dtype: bool"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["data.isna().any().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wqgHCEnWXcnS","executionInfo":{"status":"ok","timestamp":1719068156749,"user_tz":-540,"elapsed":416,"user":{"displayName":"Lim Jey","userId":"15661344898352749079"}},"outputId":"0ea270fa-4117-444c-b567-6f32df4f856a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["data['age'].fillna(value=int(data['age'].mean()), inplace=True)\n","data['age'] = data['age'].astype('int32')"],"metadata":{"id":"_bdQxUuucoa4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["lesion_type_dict = {\n","    'nv': 'Melanocytic nevi (nv)',\n","    'mel': 'Melanoma (mel)',\n","    'bkl': 'Benign keratosis-like lesions (bkl)',\n","    'bcc': 'Basal cell carcinoma (bcc)',\n","    'akiec': 'Actinic keratoses (akiec)',\n","    'vasc': 'Vascular lesions (vasc)',\n","    'df': 'Dermatofibroma (df)'\n","}"],"metadata":{"id":"zNFalL6Acp_P"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data['cell_type'] = data['dx'].map(lesion_type_dict.get)\n","data['path'] = data['image_id'].map(imageid_path_dict.get)"],"metadata":{"id":"0wpQtL5wcqJR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":486},"id":"ouur2HVkcqN0","executionInfo":{"status":"ok","timestamp":1719068194945,"user_tz":-540,"elapsed":415,"user":{"displayName":"Lim Jey","userId":"15661344898352749079"}},"outputId":"0b435d07-9d43-49d2-9a29-9863f9da62b9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     lesion_id      image_id   dx dx_type  age   sex localization  \\\n","0  HAM_0000118  ISIC_0027419  bkl   histo   80  male        scalp   \n","1  HAM_0000118  ISIC_0025030  bkl   histo   80  male        scalp   \n","2  HAM_0002730  ISIC_0026769  bkl   histo   80  male        scalp   \n","3  HAM_0002730  ISIC_0025661  bkl   histo   80  male        scalp   \n","4  HAM_0001466  ISIC_0031633  bkl   histo   75  male          ear   \n","\n","                             cell_type  \\\n","0  Benign keratosis-like lesions (bkl)   \n","1  Benign keratosis-like lesions (bkl)   \n","2  Benign keratosis-like lesions (bkl)   \n","3  Benign keratosis-like lesions (bkl)   \n","4  Benign keratosis-like lesions (bkl)   \n","\n","                                               path  \n","0  /content/HAM10000_images_part_1/ISIC_0027419.jpg  \n","1  /content/HAM10000_images_part_1/ISIC_0025030.jpg  \n","2  /content/HAM10000_images_part_1/ISIC_0026769.jpg  \n","3  /content/HAM10000_images_part_1/ISIC_0025661.jpg  \n","4  /content/HAM10000_images_part_2/ISIC_0031633.jpg  "],"text/html":["\n","  <div id=\"df-7edf59d4-b049-4edf-a8c0-b64ac1ebe178\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>lesion_id</th>\n","      <th>image_id</th>\n","      <th>dx</th>\n","      <th>dx_type</th>\n","      <th>age</th>\n","      <th>sex</th>\n","      <th>localization</th>\n","      <th>cell_type</th>\n","      <th>path</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>HAM_0000118</td>\n","      <td>ISIC_0027419</td>\n","      <td>bkl</td>\n","      <td>histo</td>\n","      <td>80</td>\n","      <td>male</td>\n","      <td>scalp</td>\n","      <td>Benign keratosis-like lesions (bkl)</td>\n","      <td>/content/HAM10000_images_part_1/ISIC_0027419.jpg</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>HAM_0000118</td>\n","      <td>ISIC_0025030</td>\n","      <td>bkl</td>\n","      <td>histo</td>\n","      <td>80</td>\n","      <td>male</td>\n","      <td>scalp</td>\n","      <td>Benign keratosis-like lesions (bkl)</td>\n","      <td>/content/HAM10000_images_part_1/ISIC_0025030.jpg</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>HAM_0002730</td>\n","      <td>ISIC_0026769</td>\n","      <td>bkl</td>\n","      <td>histo</td>\n","      <td>80</td>\n","      <td>male</td>\n","      <td>scalp</td>\n","      <td>Benign keratosis-like lesions (bkl)</td>\n","      <td>/content/HAM10000_images_part_1/ISIC_0026769.jpg</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>HAM_0002730</td>\n","      <td>ISIC_0025661</td>\n","      <td>bkl</td>\n","      <td>histo</td>\n","      <td>80</td>\n","      <td>male</td>\n","      <td>scalp</td>\n","      <td>Benign keratosis-like lesions (bkl)</td>\n","      <td>/content/HAM10000_images_part_1/ISIC_0025661.jpg</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>HAM_0001466</td>\n","      <td>ISIC_0031633</td>\n","      <td>bkl</td>\n","      <td>histo</td>\n","      <td>75</td>\n","      <td>male</td>\n","      <td>ear</td>\n","      <td>Benign keratosis-like lesions (bkl)</td>\n","      <td>/content/HAM10000_images_part_2/ISIC_0031633.jpg</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7edf59d4-b049-4edf-a8c0-b64ac1ebe178')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7edf59d4-b049-4edf-a8c0-b64ac1ebe178 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7edf59d4-b049-4edf-a8c0-b64ac1ebe178');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e356cb9f-160f-4690-9df9-027246dc6ddf\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e356cb9f-160f-4690-9df9-027246dc6ddf')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e356cb9f-160f-4690-9df9-027246dc6ddf button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data","summary":"{\n  \"name\": \"data\",\n  \"rows\": 10015,\n  \"fields\": [\n    {\n      \"column\": \"lesion_id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 7470,\n        \"samples\": [\n          \"HAM_0002743\",\n          \"HAM_0004142\",\n          \"HAM_0003658\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"image_id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10015,\n        \"samples\": [\n          \"ISIC_0033272\",\n          \"ISIC_0031923\",\n          \"ISIC_0026652\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"dx\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"bkl\",\n          \"nv\",\n          \"bcc\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"dx_type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"consensus\",\n          \"follow_up\",\n          \"histo\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 19,\n        \"samples\": [\n          80,\n          85,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"male\",\n          \"female\",\n          \"unknown\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"localization\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 15,\n        \"samples\": [\n          \"lower extremity\",\n          \"neck\",\n          \"scalp\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cell_type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Benign keratosis-like lesions (bkl)\",\n          \"Melanocytic nevi (nv)\",\n          \"Basal cell carcinoma (bcc)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"path\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10015,\n        \"samples\": [\n          \"/content/HAM10000_images_part_2/ISIC_0033272.jpg\",\n          \"/content/HAM10000_images_part_2/ISIC_0031923.jpg\",\n          \"/content/HAM10000_images_part_1/ISIC_0026652.jpg\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["# 이미지 데이터 시각화하기\n","\n","from PIL import Image\n","import plotly.graph_objects as go\n","import plotly.express as px\n","from plotly.subplots import make_subplots\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n"],"metadata":{"id":"tUbbQhfAcqR9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data['image_pixel'] = data['path'].map(lambda x: np.asarray(Image.open(x).resize((28, 28))))"],"metadata":{"id":"IMxgnMGgcqV6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":486},"id":"Z9Mv8ODkcqZb","executionInfo":{"status":"ok","timestamp":1719068510652,"user_tz":-540,"elapsed":2050,"user":{"displayName":"Lim Jey","userId":"15661344898352749079"}},"outputId":"c520571a-c6c7-4af1-829f-cbae2a1053a4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     lesion_id      image_id   dx dx_type  age   sex localization  \\\n","0  HAM_0000118  ISIC_0027419  bkl   histo   80  male        scalp   \n","1  HAM_0000118  ISIC_0025030  bkl   histo   80  male        scalp   \n","2  HAM_0002730  ISIC_0026769  bkl   histo   80  male        scalp   \n","3  HAM_0002730  ISIC_0025661  bkl   histo   80  male        scalp   \n","4  HAM_0001466  ISIC_0031633  bkl   histo   75  male          ear   \n","\n","                             cell_type  \\\n","0  Benign keratosis-like lesions (bkl)   \n","1  Benign keratosis-like lesions (bkl)   \n","2  Benign keratosis-like lesions (bkl)   \n","3  Benign keratosis-like lesions (bkl)   \n","4  Benign keratosis-like lesions (bkl)   \n","\n","                                               path  \\\n","0  /content/HAM10000_images_part_1/ISIC_0027419.jpg   \n","1  /content/HAM10000_images_part_1/ISIC_0025030.jpg   \n","2  /content/HAM10000_images_part_1/ISIC_0026769.jpg   \n","3  /content/HAM10000_images_part_1/ISIC_0025661.jpg   \n","4  /content/HAM10000_images_part_2/ISIC_0031633.jpg   \n","\n","                                         image_pixel  \n","0  [[[192, 153, 193], [195, 155, 192], [197, 154,...  \n","1  [[[27, 16, 32], [69, 49, 76], [122, 93, 126], ...  \n","2  [[[192, 138, 153], [200, 144, 162], [202, 142,...  \n","3  [[[40, 21, 31], [95, 61, 73], [143, 102, 118],...  \n","4  [[[159, 114, 140], [194, 144, 173], [215, 162,...  "],"text/html":["\n","  <div id=\"df-b321523d-dee3-4841-a2a8-9f94a627040c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>lesion_id</th>\n","      <th>image_id</th>\n","      <th>dx</th>\n","      <th>dx_type</th>\n","      <th>age</th>\n","      <th>sex</th>\n","      <th>localization</th>\n","      <th>cell_type</th>\n","      <th>path</th>\n","      <th>image_pixel</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>HAM_0000118</td>\n","      <td>ISIC_0027419</td>\n","      <td>bkl</td>\n","      <td>histo</td>\n","      <td>80</td>\n","      <td>male</td>\n","      <td>scalp</td>\n","      <td>Benign keratosis-like lesions (bkl)</td>\n","      <td>/content/HAM10000_images_part_1/ISIC_0027419.jpg</td>\n","      <td>[[[192, 153, 193], [195, 155, 192], [197, 154,...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>HAM_0000118</td>\n","      <td>ISIC_0025030</td>\n","      <td>bkl</td>\n","      <td>histo</td>\n","      <td>80</td>\n","      <td>male</td>\n","      <td>scalp</td>\n","      <td>Benign keratosis-like lesions (bkl)</td>\n","      <td>/content/HAM10000_images_part_1/ISIC_0025030.jpg</td>\n","      <td>[[[27, 16, 32], [69, 49, 76], [122, 93, 126], ...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>HAM_0002730</td>\n","      <td>ISIC_0026769</td>\n","      <td>bkl</td>\n","      <td>histo</td>\n","      <td>80</td>\n","      <td>male</td>\n","      <td>scalp</td>\n","      <td>Benign keratosis-like lesions (bkl)</td>\n","      <td>/content/HAM10000_images_part_1/ISIC_0026769.jpg</td>\n","      <td>[[[192, 138, 153], [200, 144, 162], [202, 142,...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>HAM_0002730</td>\n","      <td>ISIC_0025661</td>\n","      <td>bkl</td>\n","      <td>histo</td>\n","      <td>80</td>\n","      <td>male</td>\n","      <td>scalp</td>\n","      <td>Benign keratosis-like lesions (bkl)</td>\n","      <td>/content/HAM10000_images_part_1/ISIC_0025661.jpg</td>\n","      <td>[[[40, 21, 31], [95, 61, 73], [143, 102, 118],...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>HAM_0001466</td>\n","      <td>ISIC_0031633</td>\n","      <td>bkl</td>\n","      <td>histo</td>\n","      <td>75</td>\n","      <td>male</td>\n","      <td>ear</td>\n","      <td>Benign keratosis-like lesions (bkl)</td>\n","      <td>/content/HAM10000_images_part_2/ISIC_0031633.jpg</td>\n","      <td>[[[159, 114, 140], [194, 144, 173], [215, 162,...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b321523d-dee3-4841-a2a8-9f94a627040c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b321523d-dee3-4841-a2a8-9f94a627040c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b321523d-dee3-4841-a2a8-9f94a627040c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-afcf8188-b911-46ff-b355-0e33f2d6e61a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-afcf8188-b911-46ff-b355-0e33f2d6e61a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-afcf8188-b911-46ff-b355-0e33f2d6e61a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data","summary":"{\n  \"name\": \"data\",\n  \"rows\": 10015,\n  \"fields\": [\n    {\n      \"column\": \"lesion_id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 7470,\n        \"samples\": [\n          \"HAM_0002743\",\n          \"HAM_0004142\",\n          \"HAM_0003658\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"image_id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10015,\n        \"samples\": [\n          \"ISIC_0033272\",\n          \"ISIC_0031923\",\n          \"ISIC_0026652\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"dx\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"bkl\",\n          \"nv\",\n          \"bcc\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"dx_type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"consensus\",\n          \"follow_up\",\n          \"histo\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 19,\n        \"samples\": [\n          80,\n          85,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"male\",\n          \"female\",\n          \"unknown\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"localization\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 15,\n        \"samples\": [\n          \"lower extremity\",\n          \"neck\",\n          \"scalp\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cell_type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Benign keratosis-like lesions (bkl)\",\n          \"Melanocytic nevi (nv)\",\n          \"Basal cell carcinoma (bcc)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"path\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10015,\n        \"samples\": [\n          \"/content/HAM10000_images_part_2/ISIC_0033272.jpg\",\n          \"/content/HAM10000_images_part_2/ISIC_0031923.jpg\",\n          \"/content/HAM10000_images_part_1/ISIC_0026652.jpg\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"image_pixel\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["sample_data = data.groupby('dx').apply(lambda df: df.iloc[0:2, [9, 7]])\n","sample_data\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":710},"id":"_n6z8TvQcqeL","executionInfo":{"status":"ok","timestamp":1719068525652,"user_tz":-540,"elapsed":5275,"user":{"displayName":"Lim Jey","userId":"15661344898352749079"}},"outputId":"f8875dbe-73c5-47e0-b438-584b48c0a905"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                  image_pixel  \\\n","dx                                                              \n","akiec 9687  [[[30, 14, 19], [37, 21, 28], [94, 69, 73], [1...   \n","      9688  [[[38, 22, 22], [87, 67, 66], [135, 112, 110],...   \n","bcc   2462  [[[16, 11, 12], [58, 46, 48], [177, 153, 149],...   \n","      2463  [[[197, 177, 198], [202, 188, 205], [207, 194,...   \n","bkl   0     [[[192, 153, 193], [195, 155, 192], [197, 154,...   \n","      1     [[[27, 16, 32], [69, 49, 76], [122, 93, 126], ...   \n","df    1095  [[[173, 132, 123], [195, 151, 144], [204, 162,...   \n","      1096  [[[220, 172, 180], [229, 180, 179], [240, 192,...   \n","mel   1211  [[[151, 126, 129], [161, 132, 138], [168, 140,...   \n","      1212  [[[201, 172, 187], [201, 173, 188], [203, 178,...   \n","nv    64    [[[163, 135, 159], [167, 140, 167], [170, 144,...   \n","      1210  [[[229, 145, 164], [229, 138, 162], [226, 133,...   \n","vasc  2320  [[[218, 189, 211], [221, 192, 214], [223, 190,...   \n","      2321  [[[162, 132, 132], [173, 142, 147], [180, 150,...   \n","\n","                                      cell_type  \n","dx                                               \n","akiec 9687            Actinic keratoses (akiec)  \n","      9688            Actinic keratoses (akiec)  \n","bcc   2462           Basal cell carcinoma (bcc)  \n","      2463           Basal cell carcinoma (bcc)  \n","bkl   0     Benign keratosis-like lesions (bkl)  \n","      1     Benign keratosis-like lesions (bkl)  \n","df    1095                  Dermatofibroma (df)  \n","      1096                  Dermatofibroma (df)  \n","mel   1211                       Melanoma (mel)  \n","      1212                       Melanoma (mel)  \n","nv    64                  Melanocytic nevi (nv)  \n","      1210                Melanocytic nevi (nv)  \n","vasc  2320              Vascular lesions (vasc)  \n","      2321              Vascular lesions (vasc)  "],"text/html":["\n","  <div id=\"df-43fbec37-f943-4351-ba70-bc46cdfd9a82\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th>image_pixel</th>\n","      <th>cell_type</th>\n","    </tr>\n","    <tr>\n","      <th>dx</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">akiec</th>\n","      <th>9687</th>\n","      <td>[[[30, 14, 19], [37, 21, 28], [94, 69, 73], [1...</td>\n","      <td>Actinic keratoses (akiec)</td>\n","    </tr>\n","    <tr>\n","      <th>9688</th>\n","      <td>[[[38, 22, 22], [87, 67, 66], [135, 112, 110],...</td>\n","      <td>Actinic keratoses (akiec)</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">bcc</th>\n","      <th>2462</th>\n","      <td>[[[16, 11, 12], [58, 46, 48], [177, 153, 149],...</td>\n","      <td>Basal cell carcinoma (bcc)</td>\n","    </tr>\n","    <tr>\n","      <th>2463</th>\n","      <td>[[[197, 177, 198], [202, 188, 205], [207, 194,...</td>\n","      <td>Basal cell carcinoma (bcc)</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">bkl</th>\n","      <th>0</th>\n","      <td>[[[192, 153, 193], [195, 155, 192], [197, 154,...</td>\n","      <td>Benign keratosis-like lesions (bkl)</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>[[[27, 16, 32], [69, 49, 76], [122, 93, 126], ...</td>\n","      <td>Benign keratosis-like lesions (bkl)</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">df</th>\n","      <th>1095</th>\n","      <td>[[[173, 132, 123], [195, 151, 144], [204, 162,...</td>\n","      <td>Dermatofibroma (df)</td>\n","    </tr>\n","    <tr>\n","      <th>1096</th>\n","      <td>[[[220, 172, 180], [229, 180, 179], [240, 192,...</td>\n","      <td>Dermatofibroma (df)</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">mel</th>\n","      <th>1211</th>\n","      <td>[[[151, 126, 129], [161, 132, 138], [168, 140,...</td>\n","      <td>Melanoma (mel)</td>\n","    </tr>\n","    <tr>\n","      <th>1212</th>\n","      <td>[[[201, 172, 187], [201, 173, 188], [203, 178,...</td>\n","      <td>Melanoma (mel)</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">nv</th>\n","      <th>64</th>\n","      <td>[[[163, 135, 159], [167, 140, 167], [170, 144,...</td>\n","      <td>Melanocytic nevi (nv)</td>\n","    </tr>\n","    <tr>\n","      <th>1210</th>\n","      <td>[[[229, 145, 164], [229, 138, 162], [226, 133,...</td>\n","      <td>Melanocytic nevi (nv)</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">vasc</th>\n","      <th>2320</th>\n","      <td>[[[218, 189, 211], [221, 192, 214], [223, 190,...</td>\n","      <td>Vascular lesions (vasc)</td>\n","    </tr>\n","    <tr>\n","      <th>2321</th>\n","      <td>[[[162, 132, 132], [173, 142, 147], [180, 150,...</td>\n","      <td>Vascular lesions (vasc)</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-43fbec37-f943-4351-ba70-bc46cdfd9a82')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-43fbec37-f943-4351-ba70-bc46cdfd9a82 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-43fbec37-f943-4351-ba70-bc46cdfd9a82');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d32d03a8-b8fb-4955-9bff-d07ef93010de\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d32d03a8-b8fb-4955-9bff-d07ef93010de')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d32d03a8-b8fb-4955-9bff-d07ef93010de button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_bd3f482d-0503-42b9-9350-fe5c4d131758\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('sample_data')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_bd3f482d-0503-42b9-9350-fe5c4d131758 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('sample_data');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"sample_data","summary":"{\n  \"name\": \"sample_data\",\n  \"rows\": 14,\n  \"fields\": [\n    {\n      \"column\": \"image_pixel\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cell_type\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Actinic keratoses (akiec)\",\n          \"Basal cell carcinoma (bcc)\",\n          \"Melanocytic nevi (nv)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["\n","plt.figure(figsize=(22, 32))\n","for i in range(14):\n","    plt.subplot(7, 5, i + 1)\n","    plt.imshow(np.squeeze(sample_data['image_pixel'][i]))\n","    plt.title(sample_data['cell_type'][i])\n","    plt.axis(\"off\")\n","plt.show();"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":407},"id":"G3DJ1KFseB4H","executionInfo":{"status":"ok","timestamp":1719068539853,"user_tz":-540,"elapsed":2888,"user":{"displayName":"Lim Jey","userId":"15661344898352749079"}},"outputId":"727652e9-2edd-456b-fe29-4504f828a7a1"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 2200x3200 with 14 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# 이미지 데이터 전처리하기\n","\n","label_mapping = {\n","    0: 'nv',\n","    1: 'mel',\n","    2: 'bkl',\n","    3: 'bcc',\n","    4: 'akiec',\n","    5: 'vasc',\n","    6: 'df'\n","}\n","reverse_label_mapping = dict((value, key) for key, value in label_mapping.items())\n","\n"],"metadata":{"id":"ZxLtYwKeeCG2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data['label'] = data['dx'].map(reverse_label_mapping.get)\n","\n","data = data.sort_values('label')\n","data = data.reset_index()"],"metadata":{"id":"dALcNt_oeCK9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.bar([0,1,2,3,4,5,6], data.groupby('label')['index'].count())\n","print(data.groupby('label')['index'].count())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":589},"id":"vmUfZr9leCOR","executionInfo":{"status":"ok","timestamp":1719068656310,"user_tz":-540,"elapsed":1469,"user":{"displayName":"Lim Jey","userId":"15661344898352749079"}},"outputId":"84b67370-e02c-40c2-927c-3310cbb9d21c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["label\n","0    6705\n","1    1113\n","2    1099\n","3     514\n","4     327\n","5     142\n","6     115\n","Name: index, dtype: int64\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["counter = 0\n","frames = [data]\n","for i in [4,4,11,17,45,52]:\n","    counter+=1\n","    index = data[data['label'] == counter].index.values\n","    df_index = data.iloc[int(min(index)):int(max(index)+1)]\n","    df_index = pd.concat([df_index]*(i+1), ignore_index = True)\n","    frames.append(df_index)"],"metadata":{"id":"F5RWeY4KeCRz"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["final_data = pd.concat(frames)\n","\n","print(data.shape)\n","print(final_data.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6GLNv4UOfA4H","executionInfo":{"status":"ok","timestamp":1719068794321,"user_tz":-540,"elapsed":374,"user":{"displayName":"Lim Jey","userId":"15661344898352749079"}},"outputId":"0e832e3b-0da7-4cda-e202-2a73c3cab59f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(10015, 12)\n","(45756, 12)\n"]}]},{"cell_type":"code","source":["plt.bar([0,1,2,3,4,5,6], final_data.groupby('label')['index'].count())\n","print(final_data.groupby('label')['index'].count())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":589},"id":"F5Q3ztmRfBDx","executionInfo":{"status":"ok","timestamp":1719068802948,"user_tz":-540,"elapsed":1048,"user":{"displayName":"Lim Jey","userId":"15661344898352749079"}},"outputId":"c618212e-06c3-42e6-c926-8aec80288773"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["label\n","0    6705\n","1    6678\n","2    6594\n","3    6682\n","4    6213\n","5    6674\n","6    6210\n","Name: index, dtype: int64\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["X_aug = final_data['image_pixel'].to_numpy()\n","X_aug = np.stack(X_aug, axis=0)\n","Y_aug = np.array(final_data.iloc[:, -1:])\n","print(X_aug.shape)\n","print(Y_aug.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wuk-6wcwfBHP","executionInfo":{"status":"ok","timestamp":1719068811830,"user_tz":-540,"elapsed":473,"user":{"displayName":"Lim Jey","userId":"15661344898352749079"}},"outputId":"2c7b9da5-bbb4-4e2b-e82e-0c6ec9c00b57"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(45756, 28, 28, 3)\n","(45756, 1)\n"]}]},{"cell_type":"code","source":["# CNN 이미지 학습\n","import tensorflow as tf\n","from tensorflow.keras.preprocessing import image\n","from tensorflow.keras.preprocessing.image import ImageDataGenerator\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Conv2D, Flatten, Dense, MaxPool2D\n","from tensorflow.keras.callbacks import ReduceLROnPlateau, EarlyStopping\n","\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import classification_report, confusion_matrix\n","from sklearn.model_selection import KFold, StratifiedKFold\n","\n","tf.random.set_seed(3)\n","X_train, X_test, Y_train, Y_test = train_test_split(X_aug, Y_aug, test_size=0.2, random_state=3)\n","\n","train_datagen = ImageDataGenerator(rescale = 1./255,\n","                                  rotation_range = 10,\n","                                  width_shift_range = 0.2,\n","                                  height_shift_range = 0.2,\n","                                  shear_range = 0.2,\n","                                  horizontal_flip = True,\n","                                  vertical_flip = True,\n","                                  fill_mode = 'nearest')\n","train_datagen.fit(X_train)"],"metadata":{"id":"2VX14o1YfG71"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["test_datagen = ImageDataGenerator(rescale = 1./255)\n","test_datagen.fit(X_test)"],"metadata":{"id":"QIpAi1COfHFC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def create_model():\n","    model = Sequential()\n","    model.add(Conv2D(16, kernel_size = (3,3), input_shape = (28, 28, 3), activation = 'relu', padding = 'same'))\n","    model.add(MaxPool2D(pool_size = (2,2)))\n","\n","    model.add(Conv2D(32, kernel_size = (3,3), activation = 'relu', padding = 'same'))\n","    model.add(MaxPool2D(pool_size = (2,2), padding = 'same'))\n","\n","    model.add(Conv2D(64, kernel_size = (3,3), activation = 'relu', padding = 'same'))\n","    model.add(MaxPool2D(pool_size = (2,2), padding = 'same'))\n","\n","    model.add(Conv2D(128, kernel_size = (3,3), activation = 'relu', padding = 'same'))\n","    model.add(MaxPool2D(pool_size = (2,2), padding = 'same'))\n","\n","    model.add(Flatten())\n","    model.add(Dense(64, activation = 'relu'))\n","    model.add(Dense(32, activation='relu'))\n","    model.add(Dense(7, activation='softmax'))\n","\n","    optimizer = tf.keras.optimizers.Adam(learning_rate = 0.001)\n","\n","    model.compile(loss = 'sparse_categorical_crossentropy',\n","                 optimizer = optimizer,\n","                  metrics = ['accuracy'])\n","    print(model.summary())\n","    return model;"],"metadata":{"id":"aVeAzf2mfHJw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def train_model(model, X_train, Y_train, EPOCHS):\n","    early_stop = EarlyStopping(monitor='val_loss', patience=10, verbose=1, mode='auto')\n","\n","    reduce_lr = ReduceLROnPlateau(monitor='val_loss', factor=0.1, patience=3, verbose=1, mode='auto')\n","\n","    history = model.fit(X_train, Y_train, validation_split=0.2, batch_size = 64, epochs = EPOCHS,\n","                        callbacks = [reduce_lr, early_stop])\n","    return history"],"metadata":{"id":"BNHx9h_XfHOW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def plot_model_training_curve(history):\n","    fig = make_subplots(rows=1, cols=2, subplot_titles=['Model Accuracy', 'Model Loss'])\n","    fig.add_trace(\n","        go.Scatter(\n","            y=history.history['accuracy'], name='train_acc'), row=1, col=1)\n","    fig.add_trace(\n","        go.Scatter(\n","            y=history.history['val_accuracy'], name='val_acc'), row=1, col=1)\n","    fig.add_trace(\n","        go.Scatter(\n","            y=history.history['loss'], name='train_loss'), row=1, col=2)\n","    fig.add_trace(\n","        go.Scatter(\n","            y=history.history['val_loss'], name='val_loss'), row=1, col=2)\n","    fig.show()"],"metadata":{"id":"Eb4w2CknfHSA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","num_folds = 5\n","acc_per_fold=[]\n","loss_per_fold=[]\n","kfold = StratifiedKFold(n_splits=num_folds, shuffle=True)\n","fold_no=1\n","epochs = 50\n","model=create_model()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"E4mtmGO6fajf","executionInfo":{"status":"ok","timestamp":1719068904221,"user_tz":-540,"elapsed":1898,"user":{"displayName":"Lim Jey","userId":"15661344898352749079"}},"outputId":"7704b74f-ab99-4cf9-a1d4-e827f05d9bf1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," conv2d (Conv2D)             (None, 28, 28, 16)        448       \n","                                                                 \n"," max_pooling2d (MaxPooling2  (None, 14, 14, 16)        0         \n"," D)                                                              \n","                                                                 \n"," conv2d_1 (Conv2D)           (None, 14, 14, 32)        4640      \n","                                                                 \n"," max_pooling2d_1 (MaxPoolin  (None, 7, 7, 32)          0         \n"," g2D)                                                            \n","                                                                 \n"," conv2d_2 (Conv2D)           (None, 7, 7, 64)          18496     \n","                                                                 \n"," max_pooling2d_2 (MaxPoolin  (None, 4, 4, 64)          0         \n"," g2D)                                                            \n","                                                                 \n"," conv2d_3 (Conv2D)           (None, 4, 4, 128)         73856     \n","                                                                 \n"," max_pooling2d_3 (MaxPoolin  (None, 2, 2, 128)         0         \n"," g2D)                                                            \n","                                                                 \n"," flatten (Flatten)           (None, 512)               0         \n","                                                                 \n"," dense (Dense)               (None, 64)                32832     \n","                                                                 \n"," dense_1 (Dense)             (None, 32)                2080      \n","                                                                 \n"," dense_2 (Dense)             (None, 7)                 231       \n","                                                                 \n","=================================================================\n","Total params: 132583 (517.90 KB)\n","Trainable params: 132583 (517.90 KB)\n","Non-trainable params: 0 (0.00 Byte)\n","_________________________________________________________________\n","None\n"]}]},{"cell_type":"code","source":["for train,test in kfold.split(X_train, Y_train):\n","  print('------------------------------------------------------------------------')\n","  print(f'Training for fold {fold_no} ...')\n","  history = train_model(model, X_train[train], Y_train[train],EPOCHS=epochs)\n","  plot_model_training_curve(history)\n","\n","  scores = model.evaluate(X_train[test], Y_train[test], verbose=0)\n","  print(f'Score for fold {fold_no}: {model.metrics_names[0]} of {scores[0]}; {model.metrics_names[1]} of {scores[1]*100}%')\n","  acc_per_fold.append(scores[1] * 100)\n","  loss_per_fold.append(scores[0])\n","  model_file='skin_caner_5folds_'+str(fold_no)+'.h5'\n","  model.save(model_file)\n","\n","  fold_no = fold_no + 1"],"metadata":{"id":"Rr0u2qJyfapd"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print('------------------------------------------------------------------------')\n","print('Score per fold')\n","for i in range(0, len(acc_per_fold)):\n","  print('------------------------------------------------------------------------')\n","  print(f'> Fold {i+1} - Loss: {loss_per_fold[i]} - Accuracy: {acc_per_fold[i]}%')\n","print('------------------------------------------------------------------------')\n","print('Average scores for all folds:')\n","print(f'> Accuracy: {np.mean(acc_per_fold)} (+- {np.std(acc_per_fold)})')\n","print(f'> Loss: {np.mean(loss_per_fold)}')\n","print('------------------------------------------------------------------------')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hkTbDrcQfats","executionInfo":{"status":"ok","timestamp":1719075782303,"user_tz":-540,"elapsed":625,"user":{"displayName":"Lim Jey","userId":"15661344898352749079"}},"outputId":"e8d4aa39-4c3f-4e25-c4a4-0aba5fd6c67d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["------------------------------------------------------------------------\n","Score per fold\n","------------------------------------------------------------------------\n","> Fold 1 - Loss: 0.15689778327941895 - Accuracy: 97.19983339309692%\n","------------------------------------------------------------------------\n","> Fold 2 - Loss: 0.030672309920191765 - Accuracy: 99.49460625648499%\n","------------------------------------------------------------------------\n","> Fold 3 - Loss: 0.021395433694124222 - Accuracy: 99.56290125846863%\n","------------------------------------------------------------------------\n","> Fold 4 - Loss: 0.029145482927560806 - Accuracy: 99.4536280632019%\n","------------------------------------------------------------------------\n","> Fold 5 - Loss: 0.02227063849568367 - Accuracy: 99.54918026924133%\n","------------------------------------------------------------------------\n","Average scores for all folds:\n","> Accuracy: 99.05202984809875 (+- 0.9269233895776918)\n","> Loss: 0.052076329663395884\n","------------------------------------------------------------------------\n"]}]},{"cell_type":"markdown","source":[],"metadata":{"id":"4dcpDskRfkKN"}},{"cell_type":"code","source":["#CNN 모델 테스트하기\n","model_acc = model.evaluate(X_test, Y_test, verbose=0)[1]\n","print(\"Test Accuracy: {:.3f}%\".format(model_acc * 100))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kDa6Vlj9fayL","executionInfo":{"status":"ok","timestamp":1719075792148,"user_tz":-540,"elapsed":5682,"user":{"displayName":"Lim Jey","userId":"15661344898352749079"}},"outputId":"a7f405fb-8e33-451f-8168-3cfbbece13e6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Test Accuracy: 97.793%\n"]}]},{"cell_type":"code","source":["y_true = np.array(Y_test)\n","y_pred = model.predict(X_test)\n","y_pred = np.array(list(map(lambda x: np.argmax(x), y_pred)))\n","clr = classification_report(y_true, y_pred, target_names=label_mapping.values())\n","print(clr)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-4cqDFbKpNwl","executionInfo":{"status":"ok","timestamp":1719075810245,"user_tz":-540,"elapsed":15796,"user":{"displayName":"Lim Jey","userId":"15661344898352749079"}},"outputId":"ec58e18f-fee1-4b82-ee9a-b839a6660335"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["286/286 [==============================] - 13s 44ms/step\n","              precision    recall  f1-score   support\n","\n","          nv       0.98      0.88      0.93      1373\n","         mel       0.94      0.99      0.96      1334\n","         bkl       0.95      0.99      0.97      1324\n","         bcc       0.99      1.00      0.99      1352\n","       akiec       1.00      1.00      1.00      1232\n","        vasc       1.00      1.00      1.00      1299\n","          df       1.00      1.00      1.00      1238\n","\n","    accuracy                           0.98      9152\n","   macro avg       0.98      0.98      0.98      9152\n","weighted avg       0.98      0.98      0.98      9152\n","\n"]}]},{"cell_type":"code","source":["sample_data = X_test[:15]\n","prediction = model.predict(sample_data)\n","\n","plt.figure(figsize=(22, 12))\n","for i in range(15):\n","  plt.subplot(3, 5, i + 1)\n","  plt.imshow(sample_data[i])\n","  prediction_probability = np.amax(prediction[i]).round(2)\n","  plt.title(label_mapping[y_true[i][0]] + ' | ' + label_mapping[y_pred[i]] + ' ' + str(prediction_probability*100)+ '%' )\n","  plt.axis(\"off\")\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":396},"id":"nbkVjDgypN8q","executionInfo":{"status":"ok","timestamp":1719075821941,"user_tz":-540,"elapsed":9881,"user":{"displayName":"Lim Jey","userId":"15661344898352749079"}},"outputId":"b5a230ef-5623-48da-e1bf-69987c6d466b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 1s 543ms/step\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 2200x1200 with 15 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["import itertools"],"metadata":{"id":"SuwWsyqFpOBj"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def plot_confusion_matrix(cm, classes, name, normalize=False,\n","                          title='Confusion matrix',\n","                          cmap=plt.cm.Blues):\n","\n","    plt.figure(figsize=(8,6))\n","    plt.imshow(cm, interpolation='nearest', cmap=cmap)\n","    plt.title(name)\n","    plt.colorbar()\n","    tick_marks = np.arange(len(classes))\n","    plt.xticks(tick_marks, classes, rotation=45)\n","    plt.yticks(tick_marks, classes)\n","\n","    if normalize:\n","        cm = cm.astype('float') / cm.sum(axis=1)[:, np.newaxis]\n","\n","    thresh = cm.max() / 2.\n","    for i, j in itertools.product(range(cm.shape[0]), range(cm.shape[1])):\n","        plt.text(j, i, cm[i, j],\n","                 horizontalalignment=\"center\",\n","                 color=\"white\" if cm[i, j] > thresh else \"black\")\n","\n","    plt.tight_layout()\n","    plt.ylabel('True Labels')\n","    plt.xlabel('Predicted Labels')\n","    plt.show()\n"],"metadata":{"id":"5zEZ8jQRpOQV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def create_confusion_matrix(model, x_test_normalized, y_test, cm_plot_labels, name, y_true,y_pred):\n","\n","    y_predict_classes, y_true_classes = y_pred, y_true\n","    confusion_matrix_computed = confusion_matrix(y_true_classes, y_predict_classes)\n","    plot_confusion_matrix(confusion_matrix_computed, cm_plot_labels, name)\n"],"metadata":{"id":"wELvJ6hYpUjd"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["create_confusion_matrix(model, X_test, Y_test, label_mapping, 'confusion', y_true, y_pred)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":580},"id":"iE5TcX1TpUoR","executionInfo":{"status":"ok","timestamp":1719075834004,"user_tz":-540,"elapsed":1050,"user":{"displayName":"Lim Jey","userId":"15661344898352749079"}},"outputId":"7a363ebf-5d7f-46c7-b80c-35ba5bb17a92"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["\n","files.upload()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":56},"id":"O8KZaZkPpUsY","executionInfo":{"status":"ok","timestamp":1719075927092,"user_tz":-540,"elapsed":89938,"user":{"displayName":"Lim Jey","userId":"15661344898352749079"}},"outputId":"5107af92-578e-40ae-ce79-9e09b34bfd69"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-37fcab56-53c2-451b-bca6-9cb644be0b37\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-37fcab56-53c2-451b-bca6-9cb644be0b37\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script>// Copyright 2017 Google LLC\n","//\n","// Licensed under the Apache License, Version 2.0 (the \"License\");\n","// you may not use this file except in compliance with the License.\n","// You may obtain a copy of the License at\n","//\n","//      http://www.apache.org/licenses/LICENSE-2.0\n","//\n","// Unless required by applicable law or agreed to in writing, software\n","// distributed under the License is distributed on an \"AS IS\" BASIS,\n","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n","// See the License for the specific language governing permissions and\n","// limitations under the License.\n","\n","/**\n"," * @fileoverview Helpers for google.colab Python module.\n"," */\n","(function(scope) {\n","function span(text, styleAttributes = {}) {\n","  const element = document.createElement('span');\n","  element.textContent = text;\n","  for (const key of Object.keys(styleAttributes)) {\n","    element.style[key] = styleAttributes[key];\n","  }\n","  return element;\n","}\n","\n","// Max number of bytes which will be uploaded at a time.\n","const MAX_PAYLOAD_SIZE = 100 * 1024;\n","\n","function _uploadFiles(inputId, outputId) {\n","  const steps = uploadFilesStep(inputId, outputId);\n","  const outputElement = document.getElementById(outputId);\n","  // Cache steps on the outputElement to make it available for the next call\n","  // to uploadFilesContinue from Python.\n","  outputElement.steps = steps;\n","\n","  return _uploadFilesContinue(outputId);\n","}\n","\n","// This is roughly an async generator (not supported in the browser yet),\n","// where there are multiple asynchronous steps and the Python side is going\n","// to poll for completion of each step.\n","// This uses a Promise to block the python side on completion of each step,\n","// then passes the result of the previous step as the input to the next step.\n","function _uploadFilesContinue(outputId) {\n","  const outputElement = document.getElementById(outputId);\n","  const steps = outputElement.steps;\n","\n","  const next = steps.next(outputElement.lastPromiseValue);\n","  return Promise.resolve(next.value.promise).then((value) => {\n","    // Cache the last promise value to make it available to the next\n","    // step of the generator.\n","    outputElement.lastPromiseValue = value;\n","    return next.value.response;\n","  });\n","}\n","\n","/**\n"," * Generator function which is called between each async step of the upload\n"," * process.\n"," * @param {string} inputId Element ID of the input file picker element.\n"," * @param {string} outputId Element ID of the output display.\n"," * @return {!Iterable<!Object>} Iterable of next steps.\n"," */\n","function* uploadFilesStep(inputId, outputId) {\n","  const inputElement = document.getElementById(inputId);\n","  inputElement.disabled = false;\n","\n","  const outputElement = document.getElementById(outputId);\n","  outputElement.innerHTML = '';\n","\n","  const pickedPromise = new Promise((resolve) => {\n","    inputElement.addEventListener('change', (e) => {\n","      resolve(e.target.files);\n","    });\n","  });\n","\n","  const cancel = document.createElement('button');\n","  inputElement.parentElement.appendChild(cancel);\n","  cancel.textContent = 'Cancel upload';\n","  const cancelPromise = new Promise((resolve) => {\n","    cancel.onclick = () => {\n","      resolve(null);\n","    };\n","  });\n","\n","  // Wait for the user to pick the files.\n","  const files = yield {\n","    promise: Promise.race([pickedPromise, cancelPromise]),\n","    response: {\n","      action: 'starting',\n","    }\n","  };\n","\n","  cancel.remove();\n","\n","  // Disable the input element since further picks are not allowed.\n","  inputElement.disabled = true;\n","\n","  if (!files) {\n","    return {\n","      response: {\n","        action: 'complete',\n","      }\n","    };\n","  }\n","\n","  for (const file of files) {\n","    const li = document.createElement('li');\n","    li.append(span(file.name, {fontWeight: 'bold'}));\n","    li.append(span(\n","        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n","        `last modified: ${\n","            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n","                                    'n/a'} - `));\n","    const percent = span('0% done');\n","    li.appendChild(percent);\n","\n","    outputElement.appendChild(li);\n","\n","    const fileDataPromise = new Promise((resolve) => {\n","      const reader = new FileReader();\n","      reader.onload = (e) => {\n","        resolve(e.target.result);\n","      };\n","      reader.readAsArrayBuffer(file);\n","    });\n","    // Wait for the data to be ready.\n","    let fileData = yield {\n","      promise: fileDataPromise,\n","      response: {\n","        action: 'continue',\n","      }\n","    };\n","\n","    // Use a chunked sending to avoid message size limits. See b/62115660.\n","    let position = 0;\n","    do {\n","      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n","      const chunk = new Uint8Array(fileData, position, length);\n","      position += length;\n","\n","      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n","      yield {\n","        response: {\n","          action: 'append',\n","          file: file.name,\n","          data: base64,\n","        },\n","      };\n","\n","      let percentDone = fileData.byteLength === 0 ?\n","          100 :\n","          Math.round((position / fileData.byteLength) * 100);\n","      percent.textContent = `${percentDone}% done`;\n","\n","    } while (position < fileData.byteLength);\n","  }\n","\n","  // All done.\n","  yield {\n","    response: {\n","      action: 'complete',\n","    }\n","  };\n","}\n","\n","scope.google = scope.google || {};\n","scope.google.colab = scope.google.colab || {};\n","scope.google.colab._files = {\n","  _uploadFiles,\n","  _uploadFilesContinue,\n","};\n","})(self);\n","</script> "]},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["{}"]},"metadata":{},"execution_count":46}]},{"cell_type":"code","source":["\n","test_img = image.load_img('/content/Mack_Horton_Skin.jpg', target_size=((28,28)))\n","test_img = image.img_to_array(test_img)\n","test_img = np.expand_dims(test_img, axis=0)\n","prediction = model.predict(test_img)\n","prediction_idx = np.argmax(prediction)\n","test_image = plt.imread('/content/Mack_Horton_Skin.jpg')\n","plt.imshow(test_image)\n","plt.title('Prediction Result :' + label_mapping[prediction_idx])\n","plt.axis(\"off\")\n","\n"],"metadata":{"id":"C81BFADIpUvs"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print('===============================')\n","print('prediction per disease')\n","print('===============================')\n","for i in range(7):\n","  print(f'> {label_mapping[i]} : {(prediction[0][i]*100).round(2)} %')\n","print('===============================')"],"metadata":{"id":"sThSULBwpUz8"},"execution_count":null,"outputs":[]}]}
